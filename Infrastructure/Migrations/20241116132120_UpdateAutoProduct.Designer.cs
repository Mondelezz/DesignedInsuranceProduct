// <auto-generated />
using System;
using Domain.Enums;
using Infrastructure.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(MigrationDbContext))]
    [Migration("20241116132120_UpdateAutoProduct")]
    partial class UpdateAutoProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "available_bonuses_and_discounts", new[] { "loyalty_bonus", "seasonal_sale", "promo_code", "new_customer_discount", "special_promotion" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "brand_auto", new[] { "ford", "toyota", "volkswagen", "honda", "bmw", "mercedes", "audi" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "covered_risk", new[] { "theft", "car_accident", "natural_disasters", "fire", "vandalism", "third_party_liability", "animal_damage", "collision_with_object", "other" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "insurance_type", new[] { "osago", "casco" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "state", new[] { "actual", "archived" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "vehicle_insurance_class", new[] { "sedan", "commercial", "suv", "minivan", "sports", "electric" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "vehicle_usage_type", new[] { "private", "commercial" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.AutoInsuranceProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("AgeAuto")
                        .HasColumnType("integer");

                    b.Property<int>("AgeDriver")
                        .HasColumnType("integer");

                    b.Property<int>("AgeDrivingExpirience")
                        .HasColumnType("integer");

                    b.Property<AvailableBonusesAndDiscounts[]>("BonusesAndDiscounts")
                        .IsRequired()
                        .HasColumnType("available_bonuses_and_discounts[]");

                    b.Property<BrandAuto>("BrandAuto")
                        .HasColumnType("brand_auto");

                    b.Property<CoveredRisk[]>("CoveredRisk")
                        .IsRequired()
                        .HasColumnType("covered_risk[]");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("timezone('utc', current_timestamp)");

                    b.Property<string>("GeographicalLimitations")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<InsuranceType>("InsuranceType")
                        .HasColumnType("insurance_type");

                    b.Property<State>("State")
                        .HasColumnType("state");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("timezone('utc', current_timestamp)");

                    b.Property<string>("UsageRules")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<VehicleInsuranceClass>("VehicleInsuranceClass")
                        .HasColumnType("vehicle_insurance_class");

                    b.Property<VehicleUsageType>("VehicleUsageType")
                        .HasColumnType("vehicle_usage_type");

                    b.HasKey("Id");

                    b.ToTable("AutoInsuranceProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
